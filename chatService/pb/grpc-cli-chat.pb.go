// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: chatService/grpc-cli-chat.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ルーム参加
type MatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"` // 入力した名前
}

func (x *MatchingRequest) Reset() {
	*x = MatchingRequest{}
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingRequest) ProtoMessage() {}

func (x *MatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingRequest.ProtoReflect.Descriptor instead.
func (*MatchingRequest) Descriptor() ([]byte, []int) {
	return file_chatService_grpc_cli_chat_proto_rawDescGZIP(), []int{0}
}

func (x *MatchingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchingStatus bool   `protobuf:"varint,1,opt,name=MatchingStatus,proto3" json:"MatchingStatus,omitempty"`
	NoticeMessage  string `protobuf:"bytes,2,opt,name=NoticeMessage,proto3" json:"NoticeMessage,omitempty"`
}

func (x *MatchingResponse) Reset() {
	*x = MatchingResponse{}
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingResponse) ProtoMessage() {}

func (x *MatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingResponse.ProtoReflect.Descriptor instead.
func (*MatchingResponse) Descriptor() ([]byte, []int) {
	return file_chatService_grpc_cli_chat_proto_rawDescGZIP(), []int{1}
}

func (x *MatchingResponse) GetMatchingStatus() bool {
	if x != nil {
		return x.MatchingStatus
	}
	return false
}

func (x *MatchingResponse) GetNoticeMessage() string {
	if x != nil {
		return x.NoticeMessage
	}
	return ""
}

// チャット通信
type SendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *SendMessage) Reset() {
	*x = SendMessage{}
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessage) ProtoMessage() {}

func (x *SendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessage.ProtoReflect.Descriptor instead.
func (*SendMessage) Descriptor() ([]byte, []int) {
	return file_chatService_grpc_cli_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReceivedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *ReceivedMessage) Reset() {
	*x = ReceivedMessage{}
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceivedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedMessage) ProtoMessage() {}

func (x *ReceivedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedMessage.ProtoReflect.Descriptor instead.
func (*ReceivedMessage) Descriptor() ([]byte, []int) {
	return file_chatService_grpc_cli_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ReceivedMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReceivedMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// TODO: これでやりとりするのには少しオーバーヘッドがある気もするが、一旦気にしないこととする
type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID   string                 `protobuf:"bytes,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`      // メッセージ送信者の識別ID
	SenderName string                 `protobuf:"bytes,2,opt,name=SenderName,proto3" json:"SenderName,omitempty"`  // メッセージ送信者の名前
	RoomNumber int32                  `protobuf:"varint,3,opt,name=RoomNumber,proto3" json:"RoomNumber,omitempty"` // 対象のルーム番号
	Content    string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`        // 内容
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`    // タイムスタンプ
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chatService_grpc_cli_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_chatService_grpc_cli_chat_proto_rawDescGZIP(), []int{4}
}

func (x *MessageInfo) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *MessageInfo) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *MessageInfo) GetRoomNumber() int32 {
	if x != nil {
		return x.RoomNumber
	}
	return 0
}

func (x *MessageInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_chatService_grpc_cli_chat_proto protoreflect.FileDescriptor

var file_chatService_grpc_cli_chat_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x63, 0x6c, 0x69, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xa9, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x28, 0x01, 0x30, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chatService_grpc_cli_chat_proto_rawDescOnce sync.Once
	file_chatService_grpc_cli_chat_proto_rawDescData = file_chatService_grpc_cli_chat_proto_rawDesc
)

func file_chatService_grpc_cli_chat_proto_rawDescGZIP() []byte {
	file_chatService_grpc_cli_chat_proto_rawDescOnce.Do(func() {
		file_chatService_grpc_cli_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatService_grpc_cli_chat_proto_rawDescData)
	})
	return file_chatService_grpc_cli_chat_proto_rawDescData
}

var file_chatService_grpc_cli_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chatService_grpc_cli_chat_proto_goTypes = []any{
	(*MatchingRequest)(nil),       // 0: grpc.cli.chat.MatchingRequest
	(*MatchingResponse)(nil),      // 1: grpc.cli.chat.MatchingResponse
	(*SendMessage)(nil),           // 2: grpc.cli.chat.SendMessage
	(*ReceivedMessage)(nil),       // 3: grpc.cli.chat.ReceivedMessage
	(*MessageInfo)(nil),           // 4: grpc.cli.chat.MessageInfo
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_chatService_grpc_cli_chat_proto_depIdxs = []int32{
	5, // 0: grpc.cli.chat.MessageInfo.Timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: grpc.cli.chat.ChatService.Matching:input_type -> grpc.cli.chat.MatchingRequest
	2, // 2: grpc.cli.chat.ChatService.Connect:input_type -> grpc.cli.chat.SendMessage
	1, // 3: grpc.cli.chat.ChatService.Matching:output_type -> grpc.cli.chat.MatchingResponse
	3, // 4: grpc.cli.chat.ChatService.Connect:output_type -> grpc.cli.chat.ReceivedMessage
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chatService_grpc_cli_chat_proto_init() }
func file_chatService_grpc_cli_chat_proto_init() {
	if File_chatService_grpc_cli_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatService_grpc_cli_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatService_grpc_cli_chat_proto_goTypes,
		DependencyIndexes: file_chatService_grpc_cli_chat_proto_depIdxs,
		MessageInfos:      file_chatService_grpc_cli_chat_proto_msgTypes,
	}.Build()
	File_chatService_grpc_cli_chat_proto = out.File
	file_chatService_grpc_cli_chat_proto_rawDesc = nil
	file_chatService_grpc_cli_chat_proto_goTypes = nil
	file_chatService_grpc_cli_chat_proto_depIdxs = nil
}
